name: Frontend Tests

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main ]

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v5
      
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: scorm-builder/package-lock.json
      
      - name: Install dependencies
        working-directory: ./scorm-builder
        run: npm ci
      
      - name: Run unit tests
        working-directory: ./scorm-builder
        run: npm test -- --run --reporter=verbose
        env:
          CI: true
      
      - name: Generate coverage report
        working-directory: ./scorm-builder
        run: npm test -- --run --coverage
        continue-on-error: true
      
      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: scorm-builder/coverage/
          retention-days: 7

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v5
      
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: scorm-builder/package-lock.json
      
      - name: Install system dependencies for Tauri
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev \
            build-essential \
            curl \
            wget \
            file \
            libxdo-dev \
            libssl-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev
      
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
      
      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './scorm-builder/src-tauri -> target'
      
      - name: Install dependencies
        working-directory: ./scorm-builder
        run: npm ci
      
      - name: Build Tauri binary for tests
        working-directory: ./scorm-builder/src-tauri
        run: cargo build --release
      
      - name: Run integration tests
        working-directory: ./scorm-builder
        run: |
          npm test -- --run --grep "integration|behavior" --reporter=verbose
        env:
          CI: true
          VITE_TEST_MODE: true

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v5
      
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: scorm-builder/package-lock.json
      
      - name: Install dependencies
        working-directory: ./scorm-builder
        run: |
          npm ci
          npx playwright install chromium
      
      - name: Run E2E tests
        working-directory: ./scorm-builder
        run: npm run test:e2e
        env:
          CI: true
      
      - name: Upload playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: scorm-builder/playwright-report/
          retention-days: 7

  bdd-tests:
    name: BDD Tests
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v5
      
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: scorm-builder/package-lock.json
      
      - name: Install dependencies
        working-directory: ./scorm-builder
        run: |
          npm ci
          npx playwright install chromium
      
      - name: Build frontend
        working-directory: ./scorm-builder
        run: npm run build
      
      - name: Start test server
        working-directory: ./scorm-builder
        run: |
          npm run preview &
          sleep 5
        env:
          PORT: 1421
      
      - name: Run BDD tests
        working-directory: ./scorm-builder
        run: npx cucumber-js --config cucumber.ci.mjs --tags "not @wip"
        env:
          CI: true
          BASE_URL: http://localhost:1421
          HEADLESS: true
      
      - name: Upload BDD reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: bdd-reports
          path: |
            scorm-builder/tests/bdd/reports/
            scorm-builder/tests/bdd/screenshots/
          retention-days: 7

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests, e2e-tests, bdd-tests]
    if: always()
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: test-artifacts
      
      - name: Generate test summary
        run: |
          echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "### Test Status" >> $GITHUB_STEP_SUMMARY
          echo "| Test Suite | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|------------|--------|" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.unit-tests.result }}" == "success" ]; then
            echo "| Unit Tests | ✅ Passed |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| Unit Tests | ❌ Failed |" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ needs.integration-tests.result }}" == "success" ]; then
            echo "| Integration Tests | ✅ Passed |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| Integration Tests | ❌ Failed |" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ needs.e2e-tests.result }}" == "success" ]; then
            echo "| E2E Tests | ✅ Passed |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| E2E Tests | ❌ Failed |" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ needs.bdd-tests.result }}" == "success" ]; then
            echo "| BDD Tests | ✅ Passed |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| BDD Tests | ❌ Failed |" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Artifacts" >> $GITHUB_STEP_SUMMARY
          echo "- Coverage reports available in artifacts" >> $GITHUB_STEP_SUMMARY
          echo "- Test reports available in artifacts" >> $GITHUB_STEP_SUMMARY